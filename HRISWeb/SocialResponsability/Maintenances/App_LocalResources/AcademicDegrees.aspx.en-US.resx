<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcademicDegreeCode.HeaderText" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="AcademicDegreeNameEN.HeaderText" xml:space="preserve">
    <value>Academic degree</value>
  </data>
  <data name="AcademicDegreeNameES.HeaderText" xml:space="preserve">
    <value>Academic degree</value>
  </data>
  <data name="AcademicYearCoursing.HeaderText" xml:space="preserve">
    <value>Coursing year</value>
  </data>
  <data name="AcademicYearNotCoursing.HeaderText" xml:space="preserve">
    <value>Not coursing year</value>
  </data>
  <data name="btnAccept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="btnAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="btnAddEditCoursingYear" xml:space="preserve">
    <value>Coursing Year</value>
  </data>
  <data name="btnAddEditNotCoursingYear" xml:space="preserve">
    <value>Not coursing year</value>
  </data>
  <data name="btnAddYear" xml:space="preserve">
    <value>Add year</value>
  </data>
  <data name="btnDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="btnDeleteYear" xml:space="preserve">
    <value>Delete year</value>
  </data>
  <data name="btnDialogAddYear" xml:space="preserve">
    <value>Add year</value>
  </data>
  <data name="btnDialogCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="btnDialogDeleteYear" xml:space="preserve">
    <value>Delete year</value>
  </data>
  <data name="btnDialogSave" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="btnEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="btnSearch" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="DialogMaintenanceAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="DialogMaintenanceCoursingYear" xml:space="preserve">
    <value>Edit coursing years of study</value>
  </data>
  <data name="DialogMaintenanceEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="DialogMaintenanceNotCoursingYear" xml:space="preserve">
    <value>Edit not coursing years of study</value>
  </data>
  <data name="lblAcademicDegreeName" xml:space="preserve">
    <value>Academic degree</value>
  </data>
  <data name="lblAcademicDegreeNameEnglish" xml:space="preserve">
    <value>Academic degree in english</value>
  </data>
  <data name="lblAcademicDegreeNameSpanish" xml:space="preserve">
    <value>Academic degree in spanish</value>
  </data>
  <data name="lblAcademicDegreeOrderList" xml:space="preserve">
    <value>List Dropdown Order</value>
  </data>
  <data name="lblAcademicDegreeTypeFormationSpanish" xml:space="preserve">
    <value>Type of academic degree</value>
  </data>
  <data name="lblAcademicDegreeYear" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="lblActivateDeleted" xml:space="preserve">
    <value>Activate found record with its original data</value>
  </data>
  <data name="lblchkReadWrite" xml:space="preserve">
    <value>Read and Write?</value>
  </data>
  <data name="lblCoursingYear" xml:space="preserve">
    <value>Year studying</value>
  </data>
  <data name="lblFiltersSubtitle" xml:space="preserve">
    <value>Search filters</value>
  </data>
  <data name="lblNoData" xml:space="preserve">
    <value>There are no records to display.</value>
  </data>
  <data name="lblScreenTitle" xml:space="preserve">
    <value>List of academic degrees.</value>
  </data>
  <data name="lblSearchEnabled" xml:space="preserve">
    <value>¿Enabled?</value>
  </data>
  <data name="lblTextActionActivateDeletedDialog" xml:space="preserve">
    <value>What action do you want to take with the duplicate record? &lt;br /&gt;&lt;br /&gt;</value>
  </data>
  <data name="lblTextActivateDeletedDialog" xml:space="preserve">
    <value>The entered data causes a code duplication conflict with another deactivated record.&lt;br/&gt;The existing record data is as follows:&lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="lblTextDuplicatedDialog" xml:space="preserve">
    <value>The data entered causes a conflict with another record due to code duplication.&lt;br/&gt;The data of the existing record is as follows:&lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="lblUpdateActivateDeleted" xml:space="preserve">
    <value>Activate found record updating with new data</value>
  </data>
  <data name="msgAcademicDegreeNameEnglishValidation" xml:space="preserve">
    <value>You must indicate an academic degree name in English</value>
  </data>
  <data name="msgAcademicDegreeNameSpanishValidation" xml:space="preserve">
    <value>You must indicate an academic degree name in Spanish</value>
  </data>
  <data name="msgAcademicDegreeOrderListValidation" xml:space="preserve">
    <value>You must enter a list order for the valid academic degree.</value>
  </data>
  <data name="msgDegreeFormationValidation" xml:space="preserve">
    <value>You must select a valid academic degree type.</value>
  </data>
  <data name="msgInvalidEntry" xml:space="preserve">
    <value>Please check the marked fields in the form, correct the errors and try again.</value>
  </data>
  <data name="msgInvalidSelection" xml:space="preserve">
    <value>You must select a line to proceed</value>
  </data>
  <data name="msgOperationSuccesfull" xml:space="preserve">
    <value>The operation was carried out successfully.</value>
  </data>
  <data name="msgtxtAcademicYearDialogValidation" xml:space="preserve">
    <value>You must enter a valid year for the academic degree.</value>
  </data>
  <data name="msgWaitWhileProcessing" xml:space="preserve">
    <value>Please wait while the last request is finished.</value>
  </data>
  <data name="msjCancel" xml:space="preserve">
    <value>Are you sure you want to exit without saving?</value>
  </data>
  <data name="msjDelete" xml:space="preserve">
    <value>Do you want to delete the selected record?</value>
  </data>
  <data name="msjYearEmpty" xml:space="preserve">
    <value>You must enter a year in the year text field, please validate again.</value>
  </data>
  <data name="msjYearErrorDeleteNotExist" xml:space="preserve">
    <value>The year you are trying to delete does not exist in the records, please validate again according to the lists shown.</value>
  </data>
  <data name="msjYearErrorExist" xml:space="preserve">
    <value>The year you are trying to register already exists in the records, please validate again according to the lists shown.</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="TitleActivateDeletedDialog" xml:space="preserve">
    <value>Record off</value>
  </data>
  <data name="TitleConfirmation" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="TitleDuplicatedDialog" xml:space="preserve">
    <value>Duplicate record</value>
  </data>
  <data name="TitleError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="TitleInformation" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="TitleValidation" xml:space="preserve">
    <value>Validation</value>
  </data>
  <data name="TitleWarning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>