// Generated by Selenium IDE
using DOLE.HRIS.Application.Automation.Selenium;
using DOLE.HRIS.NUnit.Test;
using DOLE.HRIS.NUnit.Test.Utilities;
using NUnit.Framework;
using NUnit.Framework.Interfaces;
using OpenQA.Selenium;
using OpenQA.Selenium.Edge;
using OpenQA.Selenium.Support.UI;
using SeleniumExtras.WaitHelpers;
using Serilog;
using Serilog.Core;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Net;
using System.Net.Http;
using System.Runtime.InteropServices;
using System.Threading;
using System.Threading.Tasks;

namespace DOLE.HRIS.Application.Automation.Selenium
{
    [TestFixture]
    [Category("Aulas")]
    public class TC003EspaciosBlancosAulaEdicion
    {
      
        private readonly string urlEntorno = Environment.GetEnvironmentVariable("UrlApplicationForTesting", EnvironmentVariableTarget.Process);
        private string urlTest = "";

        private readonly List<SeleniumEntity> seleniumEntities = new List<SeleniumEntity>();

        private readonly SeleniumEntity seleniumEntitiesEmpty = new SeleniumEntity("ADU001", "");
        private readonly string URLScreen = "/Training/Maintenances/Classrooms.aspx";

        private IWebDriver driver;
        public IDictionary<string, object> vars { get; private set; }
        private IJavaScriptExecutor js;
        WebDriverWait wait;
        Commons myCommons;
        string expectedErrorMessage = "Por favor verifique los campos marcados en el formulario, corrija los errores e intente nuevamente.";
        int cantidad;



        //Actions actions;

        [SetUp]
        public void SetUp()
        {
            urlTest = !string.IsNullOrEmpty(urlEntorno) ? urlEntorno : ConfigurationManager.AppSettings.Get("UrlApplicationForTesting");
            driver = new EdgeDriver();
            myCommons = new Commons();
            myCommons.log();


            wait = new WebDriverWait(driver, TimeSpan.FromSeconds(60));
            driver.Manage().Window.Maximize();

            // Inicializa el ejecutor de JavaScript y el diccionario de variables
            js = (IJavaScriptExecutor)driver;
            vars = new Dictionary<string, object>();

            seleniumEntities.Add(new SeleniumEntity("ADU001", "Aula Empty1"));
            seleniumEntities.Add(new SeleniumEntity("ADU021", "Aula Empty2"));



        }

        [TearDown]
        protected void TearDown()
        {
            if (TestContext.CurrentContext.Result.Outcome.Status == TestStatus.Failed)
            {
                myCommons.TakeScreenshot(driver, TestContext.CurrentContext.Test.Name);
            }

            driver.Quit();
        }
      

        [Test]
        public async Task TC003EspaciosBlancosAula()
        {

            //Permite ingresar a la url de Aulas 
            Random rnd = new Random();

            await myCommons.SeleniumSetup(wait, driver, urlTest, URLScreen);


            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("ctl00_cntBody_btnAdd"))));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_btnAdd"))).Click();
            myCommons.Log.Information($"{DateTime.Now}: Ingresando a la modal de Creación de Aulas.");

            IWebElement fieldElement = AgregrarAula();

            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("ctl00_cntBody_txtClassroomCodeFilter"))));
            Utilities.CleanFields(js, "ctl00_cntBody_txtClassroomCodeFilter");
            driver.FindElement(By.Id("ctl00_cntBody_txtClassroomCodeFilter")).SendKeys("ADU001");
            myCommons.Log.Information($"{DateTime.Now}: Buscar por Código .  " + "ADU001");


            driver.FindElement(By.Id("ctl00_cntBody_btnSearch")).Click();
            myCommons.Log.Information($"{DateTime.Now}: Click en el botón de Buscar ");

            Thread.Sleep(500); 


            DefaultWait<IWebDriver> fluentWait = new DefaultWait<IWebDriver>(driver)
            {
                Timeout = TimeSpan.FromSeconds(10),  // Tiempo máximo de espera
                PollingInterval = TimeSpan.FromMilliseconds(500)  // Cada cuánto revisa la condición
            };
            fluentWait.IgnoreExceptionTypes(typeof(StaleElementReferenceException));  // Ignora errores de referencia obsoleta
            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("dvClassroomCode"))));

            IWebElement element = fluentWait.Until(drv => drv.FindElement(By.Id("dvClassroomCode")));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("dvClassroomCode"))).Click();
            myCommons.Log.Information($"{DateTime.Now}: Se espera que aparezca el elemento: " + (By.Id("dvClassroomCode")));



            //wait.Until(ExpectedConditions.ElementIsVisible((By.Id("ctl00_cntBody_btnEdit"))));
            //wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_btnEdit"))).Click();
            //myCommons.Log.Information($"{DateTime.Now}: Click en el boton Editar");
            Thread.Sleep(1500);
            var ButtonElement = driver.FindElement(By.Id("ctl00_cntBody_btnEdit"));
            fieldElement = wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_btnEdit")));
            wait.Until(ExpectedConditions.ElementToBeClickable((ButtonElement))).Click();
            myCommons.Log.Information($"{DateTime.Now}: Ingresando en la modal de Edición");
            Thread.Sleep(500);

            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("ctl00_cntBody_ucClassroom_cboTrainingCenter"))));
            fieldElement = driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_cboTrainingCenter"));
            Utilities.SelectOptionByDropDownList(js, fieldElement, "");
            myCommons.Log.Information($"{DateTime.Now}: El Centro de Capacitación usado:   " + fieldElement);


            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("ctl00_cntBody_ucClassroom_txtClassroomDescription"))));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtClassroomDescription"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtClassroomDescription");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtClassroomDescription")).SendKeys(" ");
            myCommons.Log.Information($"{DateTime.Now}: Ingesando empty en el campo de Descripción:  ");


            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("ctl00_cntBody_ucClassroom_txtCapacity"))));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtCapacity"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtCapacity");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtCapacity")).SendKeys("");
            myCommons.Log.Information($"{DateTime.Now}: Ingresando vacíos en capacidad :  ");


            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("ctl00_cntBody_ucClassroom_txtComments"))));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtComments"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtComments");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtComments")).SendKeys("");
            myCommons.Log.Information($"{DateTime.Now}: Ingresando vacíos en Facilidad :  ");

            wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("#ctl00_cntBody_uppDialogControl .form-horizontal")));
            driver.FindElement(By.CssSelector("#ctl00_cntBody_uppDialogControl .form-horizontal")).Click();

            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_btnAccept")));
            driver.FindElement(By.Id("ctl00_cntBody_btnAccept")).Click();
            myCommons.Log.Information($"{DateTime.Now}: Clcik en el botón de Aceptar  " + By.Id("ctl00_cntBody_btnAccept"));



            wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("h3[class='panel-title text-center']")));

            string errorMessage = driver.FindElement(By.CssSelector("div[class='panel-body text-center']")).Text;

            Assert.AreEqual(expectedErrorMessage, errorMessage, "Error Message Incorrecto.");

            Thread.Sleep(1500);


        }

        private IWebElement AgregrarAula()
        {
            IWebElement fieldElement = wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_ucClassroom_cboTrainingCenter")));
            Utilities.SelectOptionByDropDownList(js, fieldElement, "Oficinas Guápiles - Interno");
            myCommons.Log.Information($"{DateTime.Now}:Selecionado el Centro de Capacitación: Oficinas Guápiles - Interno");

            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_ucClassroom_txtClassroomCode")));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtClassroomCode"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtClassroomCode");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtClassroomCode")).SendKeys("ADU001");
            myCommons.Log.Information($"{DateTime.Now}:Ingresando el código del Aula ADU001");

            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_ucClassroom_txtClassroomDescription")));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtClassroomDescription"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtClassroomDescription");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtClassroomDescription")).SendKeys("Aula Empty1");
            myCommons.Log.Information($"{DateTime.Now}:Ingresando de la descripción:  Aula Empty1");

            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_ucClassroom_txtCapacity")));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtCapacity"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtCapacity");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtCapacity")).SendKeys(cantidad.ToString());
            myCommons.Log.Information($"{DateTime.Now}:Ingresando la capacidad del Aula {cantidad.ToString()}");


            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_ucClassroom_txtComments")));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtComments"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtComments");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtComments")).SendKeys("Selenium");
            myCommons.Log.Information($"{DateTime.Now}:Ingresando la Facilidad Disponible del  Aula : Selenium");

            wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector("#ctl00_cntBody_uppDialogControl .form-horizontal"))).Click();
            wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector(".col-sm-6 .active"))).Click();
            myCommons.Log.Information($"{DateTime.Now}:Click en el boton de activar el aula");

            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_btnAccept")));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_btnAccept"))).Click();
            myCommons.Log.Information($"{DateTime.Now}: Click en Acpeptar para Guardar el Registro de Nueva Aula ");

            Thread.Sleep(1500);

            wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));


            var alert = driver.FindElements(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success"));
            if (alert.Count > 0)
            {
                wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));
            }
            else
            {
                myCommons.Log.Information("No se encontró la alerta de éxito");
            }

            wait.Until(ExpectedConditions.InvisibilityOfElementLocated(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));

            return fieldElement;
        }
    }
}