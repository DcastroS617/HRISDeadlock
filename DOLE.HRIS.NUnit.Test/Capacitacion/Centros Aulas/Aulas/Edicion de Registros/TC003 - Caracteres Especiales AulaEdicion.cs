// Generated by Selenium IDE
using DOLE.HRIS.NUnit.Test;
using DOLE.HRIS.NUnit.Test.Utilities;
using NUnit.Framework;
using NUnit.Framework.Interfaces;
using OpenQA.Selenium;
using OpenQA.Selenium.Edge;
using OpenQA.Selenium.Support.UI;
using SeleniumExtras.WaitHelpers;
using Serilog;
using Serilog.Core;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Net;
using System.Net.Http;
using System.Runtime.InteropServices;
using System.Threading;
using System.Threading.Tasks;

namespace DOLE.HRIS.Application.Automation.Selenium
{
    [TestFixture]
    [Category("Aulas")]
    public class TC003CaracteresEspecialesAulaEdicion
    {

        private readonly string urlEntorno = Environment.GetEnvironmentVariable("UrlApplicationForTesting", EnvironmentVariableTarget.Process);
        private string urlTest = "";
        private readonly SeleniumEntity seleniumEntitiesEdited = new SeleniumEntity("@\"script/>test!@#$%^*()__++{}: <>?< ", @"Ascripttest@__:script:.LPPñ09987:ÑP.@[*?*}]]>.><<!¨¨#$%^&*((");
        private readonly string URLScreen = "/Training/Maintenances/Classrooms.aspx";

        private readonly List<SeleniumEntity> seleniumEntities = new List<SeleniumEntity>();


        private IWebDriver driver;
        WebDriverWait wait;
        public IDictionary<string, object> vars { get; private set; }
        private IJavaScriptExecutor js;

        Commons myCommons;
        int cantidad;


        //Actions actions;

        [SetUp]
        public void SetUp()
        {
            urlTest = !string.IsNullOrEmpty(urlEntorno) ? urlEntorno : ConfigurationManager.AppSettings.Get("UrlApplicationForTesting");
            driver = new EdgeDriver();
            driver.Manage().Window.Maximize();
            myCommons = new Commons();
            myCommons.log();
            wait = new WebDriverWait(driver, TimeSpan.FromSeconds(60));
            seleniumEntities.Add(new SeleniumEntity("AM001", "AM001_EditarCaracteres"));





            // Inicializa el ejecutor de JavaScript y el diccionario de variables
            js = (IJavaScriptExecutor)driver;
            vars = new Dictionary<string, object>();
        }

        [TearDown]
        protected void TearDown()
        {
            if (TestContext.CurrentContext.Result.Outcome.Status == TestStatus.Failed)
            {
                myCommons.TakeScreenshot(driver, TestContext.CurrentContext.Test.Name);
            }

            driver.Quit();
        }


        [Test]
        public async Task TC003CaracteresEspecialesAula()
        {
            Random rnd = new Random();
            await myCommons.SeleniumSetup(wait, driver, urlTest, URLScreen);

            cantidad = rnd.Next(1, 10);

            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("ctl00_cntBody_btnAdd"))));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_btnAdd"))).Click();
            myCommons.Log.Information($"{DateTime.Now}: Ingresando a la modal de Creación de Aulas.");
            AgregarDatosAula(cantidad, seleniumEntities);

            //Los pasos para completar el formulario de creación de una aula
            //myCommons.AgregarDatosAula(wait, driver, js, i, cantidad, seleniumEntitiesCreate);
            myCommons.Log.Information($"{DateTime.Now}: Aula creada Exitosamente.");


            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("ctl00_cntBody_txtClassroomCodeFilter"))));
            Utilities.CleanFields(js, "ctl00_cntBody_txtClassroomCodeFilter");
            driver.FindElement(By.Id("ctl00_cntBody_txtClassroomCodeFilter")).SendKeys(seleniumEntities[0].Code);
            myCommons.Log.Information($"{DateTime.Now}: Buscar por Código .  " + seleniumEntities[0].Code);

            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("ctl00_cntBody_btnSearch"))));
            driver.FindElement(By.Id("ctl00_cntBody_btnSearch")).Click();
            myCommons.Log.Information($"{DateTime.Now}: Click en el botón de Buscar ");


            Thread.Sleep(500);
            DefaultWait<IWebDriver> fluentWait = new DefaultWait<IWebDriver>(driver)
            {
                Timeout = TimeSpan.FromSeconds(10),  // Tiempo máximo de espera
                PollingInterval = TimeSpan.FromMilliseconds(500)  // Cada cuánto revisa la condición
            };
            fluentWait.IgnoreExceptionTypes(typeof(StaleElementReferenceException));  // Ignora errores de referencia obsoleta

            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("dvClassroomCode"))));
            IWebElement element = fluentWait.Until(drv => drv.FindElement(By.Id("dvClassroomCode")));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("dvClassroomCode"))).Click();
            myCommons.Log.Information($"{DateTime.Now}: Se espera que aparezca el elemento dvClassroomCode");

           Thread.Sleep(1000);

            //wait.Until(ExpectedConditions.ElementIsVisible((By.Id("ctl00_cntBody_btnEdit"))));
            //driver.FindElement(By.Id("ctl00_cntBody_btnEdit")).Click();
            //myCommons.Log.Information($"{DateTime.Now}: Click en el boton Editar");
            //Thread.Sleep(500);



            var ButtonElement = driver.FindElement(By.Id("ctl00_cntBody_btnEdit"));
            IWebElement fieldElement = wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_btnEdit")));
            wait.Until(ExpectedConditions.ElementToBeClickable((ButtonElement))).Click();
            myCommons.Log.Information($"{DateTime.Now}: Ingresando en la modal de Edición");

            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("ctl00_cntBody_ucClassroom_cboTrainingCenter"))));
            fieldElement = driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_cboTrainingCenter"));
            Utilities.SelectOptionByDropDownList(js, fieldElement, "Oficinas Guápiles - Interno");
            myCommons.Log.Information($"{DateTime.Now}: El Centro de Capacitación usado  \"Oficinas Guápiles - Interno\" ");


            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtClassroomDescription")).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtClassroomDescription");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtClassroomDescription")).Click();
            Thread.Sleep(500);
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtClassroomDescription")).SendKeys(seleniumEntitiesEdited.Description);
            myCommons.Log.Information($"{DateTime.Now}: Modificando la Descripción: {seleniumEntitiesEdited.Description}");

            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtCapacity")).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtCapacity");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtCapacity")).SendKeys(seleniumEntitiesEdited.Description);
            myCommons.Log.Information($"{DateTime.Now}: Ingesando caracteres en el campo de capacidad  {seleniumEntitiesEdited.Description}");


            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtComments")).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtComments");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtComments")).SendKeys(seleniumEntitiesEdited.Description);
            myCommons.Log.Information($"{DateTime.Now}: Ingesando caracteres en el campo de Facilidades Disponibles:  {seleniumEntitiesEdited.Description}"); 


            driver.FindElement(By.Id("ctl00_cntBody_btnAccept")).Click();
            myCommons.Log.Information($"{DateTime.Now}: Click en el botón de Aceptar  ");


            
            wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));


            var alert = driver.FindElements(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success"));
            if (alert.Count > 0)
            {
                wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));
            }
            else
            {
                myCommons.Log.Information("No se encontró la alerta de éxito");
            }

            wait.Until(ExpectedConditions.InvisibilityOfElementLocated(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));


          
            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("ctl00_cntBody_txtClassroomCodeFilter"))));
            Utilities.CleanFields(js, "ctl00_cntBody_txtClassroomCodeFilter");
            driver.FindElement(By.Id("ctl00_cntBody_txtClassroomCodeFilter")).SendKeys("AM001");
            myCommons.Log.Information($"{DateTime.Now}: Buscar por Código .  " + "AM001");


            driver.FindElement(By.Id("ctl00_cntBody_btnSearch")).Click();
            myCommons.Log.Information($"{DateTime.Now}: Click en el botón de Buscar ");
            myCommons.Log.Information($"{DateTime.Now}: Buscar Aula " + "AM001");

            Thread.Sleep(500);
            wait.Until(ExpectedConditions.ElementIsVisible((By.Id("dvClassroomCode"))));

            // Los asserts validan que el test case, realmente inserto las aulas
            string displayedCode = driver.FindElement(By.Id("dvClassroomCode")).Text;
            Thread.Sleep(500);
            Assert.AreEqual(seleniumEntities[0].Code, displayedCode, "La código del aula no coincide." + seleniumEntities[0].Code);
            myCommons.Log.Information($"{DateTime.Now}: Validando el Assert en el campo de Código  " + displayedCode);

            string displayedDescription = driver.FindElement(By.Id("dvClassroomDescription")).Text;
            Assert.AreEqual("Ascripttest@__:script:.LPPñ09987:ÑP.@.", displayedDescription, "La descripción del aula no coincide.");
            myCommons.Log.Information($"{DateTime.Now}: Validando el Assert en el campo de Descripción  " + displayedDescription);

            string displayedTrainingCenterCode = driver.FindElement(By.Id("dvTrainingCenterDescription")).Text;
            Assert.AreEqual("Oficinas Guápiles - Interno", displayedTrainingCenterCode, "El código del centro de capacitación no coincide.");
            myCommons.Log.Information($"{DateTime.Now}: Validando el Assert en el campo de Centros de Capacitación  " + displayedTrainingCenterCode);
            Thread.Sleep(3000);

        }

        private void AgregarDatosAula(int cantidad, List<SeleniumEntity> seleniumEntities)
        {
            IWebElement fieldElement = wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_ucClassroom_cboTrainingCenter")));
            Utilities.SelectOptionByDropDownList(js, fieldElement, "Oficinas Guápiles - Interno");
            myCommons.Log.Information($"{DateTime.Now}:Selecionado el Centro de Capacitación: Oficinas Guápiles - Interno");


            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtClassroomCode"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtClassroomCode");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtClassroomCode")).SendKeys(seleniumEntities[0].Code);
            myCommons.Log.Information($"{DateTime.Now}:Ingresando el código del Aula {seleniumEntities[0].Code}");


            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtClassroomDescription"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtClassroomDescription");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtClassroomDescription")).SendKeys(seleniumEntities[0].Description);
            myCommons.Log.Information($"{DateTime.Now}:Ingresando de la descripción del Aula {seleniumEntities[0].Description}");


            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtCapacity"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtCapacity");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtCapacity")).SendKeys(cantidad.ToString());
            myCommons.Log.Information($"{DateTime.Now}:Ingresando la capacidad del Aula {cantidad.ToString()}");


            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtComments"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtComments");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtComments")).SendKeys("Selenium");
            myCommons.Log.Information($"{DateTime.Now}:Ingresando la Facilidad Disponible del  Aula : Selenium");


            wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector("#ctl00_cntBody_uppDialogControl .form-horizontal"))).Click();
            wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector(".col-sm-6 .active"))).Click();
            myCommons.Log.Information($"{DateTime.Now}:Click en el boton de activar el aula");


            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_btnAccept"))).Click();
            myCommons.Log.Information($"{DateTime.Now}: Click en Acpeptar para Guardar el Registro de Nueva Aula ");


            wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));


            var alert = driver.FindElements(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success"));
            if (alert.Count > 0)
            {
                wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));
            }
            else
            {
                myCommons.Log.Information("No se encontró la alerta de éxito");
            }

            wait.Until(ExpectedConditions.InvisibilityOfElementLocated(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));




            Thread.Sleep(1500);

            myCommons.Log.Information($"{DateTime.Now}:Creando exitosamente el Aula: AB001_Buscar");



        }
    }
}