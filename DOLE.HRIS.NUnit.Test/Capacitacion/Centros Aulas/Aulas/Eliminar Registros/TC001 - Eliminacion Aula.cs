// Generated by Selenium IDE
using DOLE.HRIS.Application.Automation.Selenium;
using DOLE.HRIS.NUnit.Test;
using DOLE.HRIS.NUnit.Test.Utilities;
using NUnit.Framework;
using NUnit.Framework.Interfaces;
using OpenQA.Selenium;
using OpenQA.Selenium.Edge;
using OpenQA.Selenium.Support.UI;
using SeleniumExtras.WaitHelpers;
using Serilog;
using Serilog.Core;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Net;
using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;

namespace DOLE.HRIS.Application.Automation.Selenium
{
    [TestFixture]
    [Category("Aulas")]
    public class TC001EliminacionAulaTest
    {
        private readonly string urlEntorno = Environment.GetEnvironmentVariable("UrlApplicationForTesting", EnvironmentVariableTarget.Process);
        private string urlTest = "";
        private readonly string urlScreen = "/Training/Maintenances/Classrooms.aspx";

        private readonly List<SeleniumEntity> seleniumEntities = new List<SeleniumEntity>();

        private IWebDriver driver;
        public IDictionary<string, object> vars { get; private set; }
       
        private IJavaScriptExecutor js;
        //Actions actions;
        WebDriverWait wait;
        Commons myCommons;
        int cantidad;

        String expectedErrorMessage = "No existen registros que mostrar.";


        [SetUp]
        public void SetUp()
        {

            urlTest = !string.IsNullOrEmpty(urlEntorno) ? urlEntorno : ConfigurationManager.AppSettings.Get("UrlApplicationForTesting");
            driver = new EdgeDriver();
            driver.Manage().Window.Maximize();
            myCommons = new Commons();

            wait = new WebDriverWait(driver, TimeSpan.FromSeconds(30));

            js = (IJavaScriptExecutor)driver;
            vars = new Dictionary<string, object>();
            seleniumEntities.Add(new SeleniumEntity("AU001", "AU001-Borrar"));
            seleniumEntities.Add(new SeleniumEntity("AU002", "AU002-Borrar"));
           
        }

        [TearDown]
        protected void TearDown()
        {
            if (TestContext.CurrentContext.Result.Outcome.Status == TestStatus.Failed)
            {
                myCommons.TakeScreenshot(driver, TestContext.CurrentContext.Test.Name);
            }

            driver.Quit();
        }
               


        [Test]
        public async Task TC001EliminacionAula()
        {

            Random rnd = new Random();
            await myCommons.SeleniumSetup(wait, driver, urlTest, urlScreen);

            // Guardar HTML de la página de aulas
            //myURLAccesible.SaveClassroomsPageHtmlToLog();

            for (int i = 0; i < 2; i++)
            {
                cantidad = rnd.Next(1, 10);

                // Espera a que el botón con ID que contiene 'btnAdd' sea clickeable y haz clic en él
                wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_btnAdd")));

                wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_btnAdd"))).Click();
                //log.Information($"{DateTime.Now}: Ingresando a la modal de Creación de Aulas.");

                //Los pasos para completar el formulario de creación de una aula
                AgregarDatosAula(i);

                //Permite buscar las aulas creadas
                myCommons.BuscarAula(wait, driver, js, seleniumEntities[i].Code);
                wait.Until(ExpectedConditions.ElementIsVisible(By.Id("dvClassroomDescription")));
                DeletedClassroom(i);

               
                wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_grvList")));
                string errorMessage = driver.FindElement(By.Id("ctl00_cntBody_grvList")).Text;
                Assert.AreEqual(expectedErrorMessage, errorMessage, "Error Message Incorrecto.");
                myCommons.Log.Information($"{DateTime.Now}: Validando el Assert {expectedErrorMessage} ");

            }
        }

        

        private void AgregarDatosAula(int posicion)
        {
            IWebElement fieldElement = wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_ucClassroom_cboTrainingCenter")));
            Utilities.SelectOptionByDropDownList(js, fieldElement, "Oficinas Guápiles - Interno");
            myCommons.Log.Information($"{DateTime.Now}:Selecionado el Centro de Capacitación: Oficinas Guápiles - Interno");


            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtClassroomCode"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtClassroomCode");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtClassroomCode")).SendKeys(seleniumEntities[posicion].Code);
            myCommons.Log.Information($"{DateTime.Now}:Ingresando el código del Aula {seleniumEntities[posicion].Code}");


            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtClassroomDescription"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtClassroomDescription");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtClassroomDescription")).SendKeys(seleniumEntities[posicion].Description);
            myCommons.Log.Information($"{DateTime.Now}:Ingresando de la descripción del Aula {seleniumEntities[posicion].Description}");



            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtCapacity"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtCapacity");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtCapacity")).SendKeys(cantidad.ToString());
            myCommons.Log.Information($"{DateTime.Now}:Ingresando la capacidad del Aula {cantidad.ToString()}");



            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_ucClassroom_txtComments"))).Click();
            Utilities.CleanFields(js, "ctl00_cntBody_ucClassroom_txtComments");
            driver.FindElement(By.Id("ctl00_cntBody_ucClassroom_txtComments")).SendKeys("Selenium");
            myCommons.Log.Information($"{DateTime.Now}:Ingresando la Facilidad Disponible del  Aula : Selenium");


            wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector("#ctl00_cntBody_uppDialogControl .form-horizontal"))).Click();
            wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector(".col-sm-6 .active"))).Click();
            myCommons.Log.Information($"{DateTime.Now}:Click en el boton de activar el aula");


            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_btnAccept"))).Click();
            myCommons.Log.Information($"{DateTime.Now}: Click en Acpeptar para Guardar el Registro de Nueva Aula ");

            wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));


            var alert = driver.FindElements(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success"));
            if (alert.Count > 0)
            {
                wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));
            }
            else
            {
                myCommons.Log.Information("No se encontró la alerta de éxito");
            }

            wait.Until(ExpectedConditions.InvisibilityOfElementLocated(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));



        }

        private void DeletedClassroom(int posicion)
        {
             
            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("dvClassroomCode")));
            driver.FindElement(By.Id("dvClassroomCode")).Click();
            driver.FindElement(By.Id("ctl00_cntBody_btnDelete")).Click();
            myCommons.Log.Information($"{DateTime.Now}: Click en Botón de Borrar el aula");

            
            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("boton-mensajeria-uno")));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("boton-mensajeria-uno"))).Click();
            myCommons.Log.Information($"{DateTime.Now}: Click en Botón de Aceptar en el mensaje de confirmación de borrado");

            Thread.Sleep(1500);

            wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));




            var alert = driver.FindElements(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success"));
            if (alert.Count > 0)
            {
                wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));
            }
            else
            {
                myCommons.Log.Information("No se encontró la alerta de éxito");
            }

            wait.Until(ExpectedConditions.InvisibilityOfElementLocated(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));

            Thread.Sleep(1500);

            
        }



    }
    
}