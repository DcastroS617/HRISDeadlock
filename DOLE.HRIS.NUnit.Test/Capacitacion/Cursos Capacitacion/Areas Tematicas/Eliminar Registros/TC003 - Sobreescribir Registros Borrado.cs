// Generated by Selenium IDE
using DOLE.HRIS.NUnit.Test;
using DOLE.HRIS.NUnit.Test.Utilities;
using Microsoft.Win32;
using NUnit.Framework;
using NUnit.Framework.Interfaces;
using OpenQA.Selenium;
using OpenQA.Selenium.Edge;
using OpenQA.Selenium.Interactions;
using OpenQA.Selenium.Support.UI;
using SeleniumExtras.WaitHelpers;
using Serilog;
using Serilog.Core;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.NetworkInformation;
using System.Threading;
using System.Threading.Tasks;

namespace DOLE.HRIS.Application.Automation.Selenium
{
    [TestFixture]
    [Category("AreaTematicas")]
    public class TC003SobreescribirRegistroBorradoAreaTematicaTest
    {
        private readonly string urlEntorno = Environment.GetEnvironmentVariable("UrlApplicationForTesting", EnvironmentVariableTarget.Process);
        private string urlTest = "";
        private readonly string urlScreen = "/Training/Maintenances/ThematicAreas.aspx";


        private readonly SeleniumEntity seleniumEntities = new SeleniumEntity("ATSOB_001", "ATSOBRE_001_SobreescribirBorrado");
        private readonly SeleniumEntity seleniumEntitiesEdited = new SeleniumEntity("ATSOB_001", "ATSOBRE_001_SobreescribiryActivarArea");

        private IWebDriver driver;
        WebDriverWait wait;
        public IDictionary<string, object> vars { get; private set; }
        private IJavaScriptExecutor js;
        Commons myCommons;
        string expectedErrorMessage = "Los datos ingresados provocan un conflicto por duplicidad de código con otro registro desactivado.\nLos datos del registro existente son los siguientes:";

        [SetUp]
        public void SetUp()
        {
            urlTest = !string.IsNullOrEmpty(urlEntorno) ? urlEntorno : ConfigurationManager.AppSettings.Get("UrlApplicationForTesting");
            driver = new EdgeDriver();
            driver.Manage().Window.Maximize();
            myCommons = new Commons();
            myCommons.log();
            wait = new WebDriverWait(driver, TimeSpan.FromSeconds(60));

            js = (IJavaScriptExecutor)driver;
            vars = new Dictionary<string, object>();
        }

        [TearDown]
        protected void TearDown()
        {
            if (TestContext.CurrentContext.Result.Outcome.Status == TestStatus.Failed)
            {
                myCommons.TakeScreenshot(driver, TestContext.CurrentContext.Test.Name);
            }

            driver.Quit();
        }

        [Test]
        public async Task TC003SobreescribirRegistroBorradoAreaTematica()
        {
            await myCommons.SeleniumSetup(wait, driver, urlTest, urlScreen);
            Thread.Sleep(1000);
            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_btnAdd")));

            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_btnAdd"))).Click();
            myCommons.Log.Information($"{DateTime.Now}: Ingresando a la modal de Creación de Areas Temáticas.");

            Thread.Sleep(500);
            myCommons.ThematicAreaCreateCharacters(wait, driver, js, new List<SeleniumEntity> { seleniumEntities });

            myCommons.ThematicArealByCode(wait, driver, js, seleniumEntities.Code);
            myCommons.Log.Information($"{DateTime.Now}: Buscar el registro." + seleniumEntities.Code);
            Thread.Sleep(2000);
            myCommons.DeleteThematicArea(wait, driver, js, seleniumEntities.Code);
            myCommons.Log.Information($"{DateTime.Now}:Se elimina el registro." + seleniumEntities.Code);
            Utilities.CleanFields(js, "ctl00_cntBody_txtThematicAreaCodeFilter");
            myCommons.Log.Information($"{DateTime.Now}:limpiar el filtro de Código." + seleniumEntities.Code);

            Thread.Sleep(1000);
            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_btnAdd")));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_btnAdd"))).Click();
            myCommons.Log.Information($"{DateTime.Now}: Ingresando nuevamente en la modal de Creación de Area.");
            //AgregarCentro(seleniumEntities);
            myCommons.EditThematicAreaOverwriteName(wait, driver, js, new List<SeleniumEntity> { seleniumEntitiesEdited });


            Thread.Sleep(1000);
            //Assert para validar la modal de Registro Desactivado
            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_divActivateDeletedDialog")));
            string errorMessage = driver.FindElement(By.Id("ctl00_cntBody_divActivateDeletedDialog")).Text;
            errorMessage = errorMessage.Replace("\r", "");
            Assert.AreEqual(expectedErrorMessage, errorMessage, "El mensaje de error no coincide con el esperado.");
            myCommons.Log.Information($"{DateTime.Now}:Despliegue de modal de Registro desactivado con el mensaje " + expectedErrorMessage);


            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_divActivateDeletedDialog")));
            // Esperar hasta que el segundo toggle sea visible
            IWebElement secondToggle = wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector("#ctl00_cntBody_chkUpdateActivateDeleted + .toggle-group .toggle-handle")));

            // Hacer clic en el botón del toggle
            secondToggle.Click();
            myCommons.Log.Information($"{DateTime.Now}:Seleccionando Si para Activar registro encontrado actualizando con los nuevos datos ");


            //Thread.Sleep(1000);
            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("ctl00_cntBody_btnActivateDeletedAccept")));
            wait.Until(ExpectedConditions.ElementToBeClickable(By.Id("ctl00_cntBody_btnActivateDeletedAccept"))).Click();
            myCommons.Log.Information($"{DateTime.Now}: Botón de Aceptar para agregar nuevamente el registro Desactivado con el cambio en la descripción ATSOBRE_001_SobreescribiryActivarArea");

            wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));
            var alert = driver.FindElements(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success"));
            if (alert.Count > 0)
            {
                wait.Until(ExpectedConditions.ElementIsVisible(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));
            }
            else
            {
                myCommons.Log.Information("No se encontró la alerta de éxito");
            }
            wait.Until(ExpectedConditions.InvisibilityOfElementLocated(By.CssSelector("div.alert.alert-autocloseable-msg.alert-success")));

            Thread.Sleep(1500);


            myCommons.SearchThematicAreaByDescription(wait, driver, js, seleniumEntitiesEdited.Description);



            Thread.Sleep(1000);

            wait.Until(ExpectedConditions.ElementIsVisible(By.Id("dvThematicAreaName")));

            string displayedDescription = driver.FindElement(By.Id("dvThematicAreaName")).Text;
            Assert.AreEqual(seleniumEntitiesEdited.Description, displayedDescription, "El nombre del Area no coincide.");
            myCommons.Log.Information($"{DateTime.Now}: Validando el Assert por nombre del Area Temática  " + seleniumEntitiesEdited.Description);
        }
    }
}